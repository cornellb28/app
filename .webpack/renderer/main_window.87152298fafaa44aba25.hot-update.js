"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatemb_app"]("main_window",{

/***/ "./src/utils/index.ts":
/*!****************************!*\
  !*** ./src/utils/index.ts ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getMetaData = exports.isDirectory = void 0;\nconst fs = __importStar(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'fs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));\nconst glob_1 = __webpack_require__(/*! glob */ \"./node_modules/glob/glob.js\");\nconst node_id3_1 = __importDefault(__webpack_require__(/*! node-id3 */ \"./node_modules/node-id3/index.js\"));\nconst uuid_1 = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n// Using Glob to fetch the files from the Directory\nconst fetchFilesData = async (data) => {\n    const scanSelectedFiles = (data) => {\n        return new Promise((resolve, reject) => {\n            (0, glob_1.glob)(`${data}/**/*.{m4a,mp3}`, (err, files) => {\n                resolve(files);\n            });\n        });\n    };\n    const result = await scanSelectedFiles(data);\n    return result;\n};\n// Checks if the path is a Directory\nconst isDirectory = (fileNames) => {\n    let check = false;\n    for (let file of fileNames) {\n        let checkStatus = fs.lstatSync(file).isDirectory() === false ? false : true;\n        if (checkStatus === false)\n            return;\n        check = checkStatus;\n    }\n    return check;\n};\nexports.isDirectory = isDirectory;\n// Lets get the meta-tags with Nodeid-3\nconst nodeIDScan = async (path) => {\n    const nodeScan = await node_id3_1.default.read(path, { noRaw: false });\n    return nodeScan;\n};\n// convert the object to have all attributes\nfunction trackConversion(data, fileName, fileSize) {\n    return {\n        id: (0, uuid_1.v4)(),\n        size: data.size ? data.size : fileSize,\n        filename: fileName,\n        title: data.title ? data.title : \"\",\n        artist: data.artist ? data.artist : \"\",\n        bpm: data.bpm ? data.bpm : \"\",\n        remixArtist: data.remixArtist ? data.remixArtist : \"\",\n        composer: data.composer ? data.composer : \"\",\n        contentGroup: data.contentGroup ? data.contentGroup : \"\",\n        initialKey: data.initialKey ? data.initialKey : \"\",\n        label: data.publisher ? data.publisher : \"\",\n        year: data.year ? data.year : \"\",\n        genre: data.genre ? data.genre : \"default genre\",\n        comment: {\n            text: data.comment?.text ? data.comment?.text : \"default comment\",\n        },\n    };\n}\n// grabbing the files, converting,\nconst getMetaData = async (dir) => {\n    const fetchFiles = await fetchFilesData(dir);\n    let newFiles = [];\n    for (let fileName of fetchFiles) {\n        const stats = fs.statSync(fileName);\n        const filesSizeInBytes = `${stats.size / (1024 * 1000)}MB`;\n        const audioTags = await nodeIDScan(fileName);\n        const convertedTags = trackConversion(audioTags, fileName, filesSizeInBytes);\n        newFiles.push(convertedTags);\n    }\n    return newFiles;\n};\nexports.getMetaData = getMetaData;\n// export const saveFileToJson = (path: string, data: trackMeta[]) => {\n//   try {\n//     const fd = fs.openSync(path, \"w+\");\n//     fs.writeFileSync(fd, JSON.stringify(data, null, 2));\n//     // Setting timeout\n//     setTimeout(function () {\n//       // Its printed after the file is closed\n//       console.log(\"closing file now\");\n//       // closing file descriptor\n//       fs.closeSync(fd);\n//     }, 10000);\n//     console.log(\"Program done!\");\n//   } catch (error) {\n//     console.log(\"error: \", error);\n//   }\n// };\nmodule.exports = {\n    isDirectory: exports.isDirectory,\n    getMetaData: exports.getMetaData,\n};\n// https://dmitripavlutin.com/return-await-promise-javascript/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/index.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("4cff4dc0426d3e8543f1")
/******/ })();
/******/ 
/******/ }
);